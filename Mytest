import xml.etree.ElementTree as ET

def merge_web_xml(v1_file, v2_file, output_file):
    # Parse the XML files
    v1_tree = ET.parse(v1_file)
    v2_tree = ET.parse(v2_file)
    
    v1_root = v1_tree.getroot()
    v2_root = v2_tree.getroot()

    # Function to find a tag in a tree by tag name and attributes
    def find_tag_with_same_attrib(root, elem):
        for e in root.iter(elem.tag):
            if e.attrib == elem.attrib:
                return e
        return None

    # Create a new root for the output
    output_root = ET.Element(v2_root.tag)

    # Iterate over V2 tags to build the structure of the output file
    for v2_elem in v2_root:
        # Find the corresponding tag in V1
        v1_elem = find_tag_with_same_attrib(v1_root, v2_elem)
        
        if v1_elem is not None:
            # If the tag exists in V1, use the V1 tag in the output
            output_root.append(v1_elem)
        else:
            # If the tag does not exist in V1, keep the V2 tag in the output
            output_root.append(v2_elem)

    # Write the merged output to a new file
    output_tree = ET.ElementTree(output_root)
    output_tree.write(output_file, encoding="utf-8", xml_declaration=True)

# Example usage
merge_web_xml('V1_web.xml', 'V2_web.xml', 'output_web.xml')
