import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

import java.io.*;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Properties;
import java.util.Vector;

public class MainframeFileTransfer {

    // Method to list directories on the remote system
    public static void listRemoteDirectories(ChannelSftp channelSftp) throws Exception {
        try {
            Vector<ChannelSftp.LsEntry> entries = channelSftp.ls(".");
            System.out.println("Remote directories and files:");
            for (ChannelSftp.LsEntry entry : entries) {
                System.out.println(entry.getFilename());
            }
        } catch (Exception e) {
            System.err.println("Error listing remote directories: " + e.getMessage());
        }
    }

    // Method to convert file content to IBM1047 encoding and upload via SFTP
    public static void uploadToMainframe(String host, String username, String password, String localFilePath) throws Exception {
        JSch jsch = new JSch();
        Session session = jsch.getSession(username, host, 22);
        session.setPassword(password);

        // Configure the session for no host key checking
        Properties config = new Properties();
        config.put("StrictHostKeyChecking", "no");
        session.setConfig(config);

        session.connect();

        ChannelSftp channelSftp = (ChannelSftp) session.openChannel("sftp");
        channelSftp.connect();

        // List remote directories to help determine where to upload
        listRemoteDirectories(channelSftp);

        // Load the local file into memory
        byte[] fileBytes = Files.readAllBytes(Paths.get(localFilePath));
        
        // Convert the file content to IBM1047 encoding
        Charset ibm1047Charset = Charset.forName("IBM1047");
        String fileContent = new String(fileBytes, Charset.defaultCharset()); // Assuming the file is in default system charset
        byte[] ibm1047Bytes = fileContent.getBytes(ibm1047Charset);

        // Use ByteArrayInputStream to feed the IBM1047 encoded bytes to ChannelSftp.put(...)
        ByteArrayInputStream byteInputStream = new ByteArrayInputStream(ibm1047Bytes);
        
        // Use a default remote path or prompt user for input
        String remoteFilePath = "/default/path/on/mainframe/file.txt"; // Change this to your default path
        channelSftp.put(byteInputStream, remoteFilePath, ChannelSftp.OVERWRITE);

        // Close connections
        channelSftp.disconnect();
        session.disconnect();

        System.out.println("File uploaded successfully to the mainframe in IBM1047 encoding.");
    }

    public static void main(String[] args) {
        try {
            // Mainframe SFTP details
            String sftpHost = "mainframe.host.com";
            String sftpUsername = "your-username";
            String sftpPassword = "your-password";
            String localFilePath = "path/to/local/file.txt";  // Your local file path

            // Upload file to mainframe
            uploadToMainframe(sftpHost, sftpUsername, sftpPassword, localFilePath);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
