import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.helpers.DefaultHandler;
import java.io.*;

public class XmlFormatterSAX {

    public static void main(String[] args) {
        try {
            // Step 1: Create a SAXParserFactory and SAXParser
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser saxParser = factory.newSAXParser();

            // Step 2: Set up the input and output streams
            try (BufferedReader reader = new BufferedReader(new FileReader("path/to/your/input.xml"));
                 PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter("path/to/your/output.xml")))) {

                // Step 3: Define the handler for parsing events
                DefaultHandler handler = new DefaultHandler() {
                    private int indentLevel = 0;

                    @Override
                    public void startElement(String uri, String localName, String qName, Attributes attributes) {
                        printIndent(writer);
                        writer.print("<" + qName);

                        // Print attributes
                        if (attributes != null) {
                            for (int i = 0; i < attributes.getLength(); i++) {
                                writer.print(" " + attributes.getQName(i) + "=\"" + attributes.getValue(i) + "\"");
                            }
                        }

                        writer.println(">");
                        indentLevel++;
                    }

                    @Override
                    public void characters(char[] ch, int start, int length) {
                        String content = new String(ch, start, length).trim();
                        if (!content.isEmpty()) {
                            printIndent(writer);
                            writer.println(content);
                        }
                    }

                    @Override
                    public void endElement(String uri, String localName, String qName) {
                        indentLevel--;
                        printIndent(writer);
                        writer.println("</" + qName + ">");
                    }

                    private void printIndent(PrintWriter writer) {
                        for (int i = 0; i < indentLevel; i++) {
                            writer.print("  "); // Two spaces for each indent level
                        }
                    }
                };

                // Step 4: Parse the XML file and write formatted XML to the output file
                saxParser.parse(new InputSource(reader), handler);

                System.out.println("XML formatted and saved successfully!");

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
